import pefile
import hashlib

# refs:
# https://stackoverflow.com/questions/20027990/how-can-i-get-text-section-from-pe-file-using-pefile
# https://securityxploded.com/api-call-tracing-with-pefile-pydbg-and-idapython.php
# https://nitratine.net/blog/post/how-to-hash-files-in-python/


pe = pefile.PE("./MALWR/sample_qwrty_dk2")
# pe = pefile.PE("./MALWR/sample_vg655_25th.exe")

# print dlls imported by the malware
for dll in pe.DIRECTORY_ENTRY_IMPORT:
    print("\nDLL: ")
    print(dll.dll)

    # print Apis imported by the malware
    print("APIs: ")
    for api in dll.imports:
        print(api.name)

# print the malware's sections
print("\nSections: ")
for section in pe.sections:
    print("Name: ", section.Name, "Virtual Address: ", hex(section.VirtualAddress),
          "Misc_VirtualSize: ", hex(section.Misc_VirtualSize), "SizeOfRawData: ", section.SizeOfRawData)



file = "./MALWR/sample_qwrty_dk2" # Location of the file
# file = "./MALWR/sample_vg655_25th.exe" # Location of the file 
BLOCK_SIZE = 65536 # The size of each read from the file

file_hash = hashlib.sha256() # Create the hash object, can use something other than `.sha256()` if you wish
with open(file, 'rb') as f: 
    fb = f.read(BLOCK_SIZE) 
    while len(fb) > 0: 
        file_hash.update(fb) # Update the hash
        fb = f.read(BLOCK_SIZE)

print ()
print ("SHA256:")
print (file_hash.hexdigest()) # Get the hexadecimal digest of the hash